<!DOCTYPE html>
<html lang="en">
    <style>
        body{
         background-color: rgb(191, 228, 228);

       }
   </style>
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <title>New User</title>
    

</head>

<body>
    
 <%- include('navbarMain.ejs') %>  
    <div class="container  shadow-sm p-3 mb-5 mt-5 bg-body rounded ">
        <h1 style="text-align: center;">Welcome to <%= user.name %>
        </h1>
        <!-- <div class="mt-5 mb-5"> -->
        <div class="row justify-content-center">
            
            <form action="/newuser" method="POST">
                <% if (messages.successfully) { %>
                    <div class="alert alert-danger">
                        <strong>
                            <%= messages.successfully %>
                        </strong>
                    </div>
                    <% } %>
                    <a href="/" class="btn btn-secondary">Back</a>
                        <div class="row">
                            <h1 class="mb-3 h3">User Details</h1>
                            <div class="row mb-3">
                                <div class="col-md-4">
                                    <label for="name" class="form-label">Full Name</label>
                                    <input type="text" name="name" id="name" class="form-control"
                                        placeholder="Full Name" required>
                                </div>
                                <div class="col-md-4">
                                    <label for="email" class="form-label">Email address</label>
                                    <input type="email" name="email" id="email" class="form-control"
                                        placeholder="Email Address" required>
                                </div>

                                <!-- <div class="col-md-4">
                                    <label for="mobileNo" class="form-label">Mobile Number</label>
                                    <input type="number" name="mobileNo" id="mobileNo" class="form-control"
                                        placeholder="Mobile Number" required>
                                </div> -->
                                <div class="col-md-4">
                                    <label for="mobileNo" class="form-label">Mobile Number</label>
                                    <input type="text" name="mobileNo" id="mobileNo" class="form-control" placeholder="Mobile Number" required>
                                    <small id="mobileNoError" class="text-danger d-none">Invalid mobile number!</small>
                                </div>
                                
                            </div>
                            <div class="row mb-3">
                                <% if (user.role !== 'retailer') { %>
                                <div class="col-md-4">
                                    <label for="role" class="form-label">Role</label>
                                    <select class="form-select" name="role" id="role" aria-label="Select Role" required>
                                        <option value="user"<% if (user.role === 'user') { %>disabled<% } %>>User</option>
                                        <% if (user.role !== 'distributor') { %>
                                        <option value="super-distributor"<% if (user.role === 'super-distributor') { %>disabled<% } %>>Super Distributor</option>
                                        <% } %>
                                        
                                        <option value="distributor"<% if (user.role === 'distributor') { %>disabled<% } %>>Distributor</option>
                                        <option value="retailer">Retailer</option>
                                    </select>
                                </div>
                                <% } %>
                                


                                <div class="col-md-4">
                                    <label for="ShopName" class="form-label">Shop Name</label>
                                    <input type="text" name="ShopName" id="ShopName" class="form-control"
                                        placeholder="Shop Name">
                                </div>
                                <div class="col-md-4">
                                    <label for="OfficeAddress" class="form-label">Office Address</label>
                                    <input type="text" name="OfficeAddress" id="OfficeAddress" class="form-control"
                                        placeholder="Office Address">
                                </div>
                            </div>
                            <div class="row mb-5">
                                <div class="col-md-4">
                                    <label for="LockAmount" class="form-label">Lock Amount</label>
                                    <input type="number" name="LockAmount" id="LockAmount" class="form-control"
                                        placeholder="Lock Amount">
                                </div>
                            </div>
                        </div>
                        <hr class="hr" style="color: rgb(40, 147, 159); block-size: 2px; ">



                        <div class="row">

                            <div class="row mt-5">
                                <h1 class="mb-3 h3">Parmanent Address</h1>
                                <div class="col-md-4">
                                    <label for="ParmanentAddress" class="form-label">Permanent Address</label>
                                    <textarea name="ParmanentAddress" id="ParmanentAddress" class="form-control"
                                        placeholder="Permanent Address" rows="2" required></textarea>
                                </div>
                                <div class="col-md-4">
                                    <label for="ParmanentCountry" class="form-label">Permanent Country</label>
                                    <select name="ParmanentCountry" id="countryDropdown" class="form-control" required>
                                        <option value="" disabled selected>Select a country...</option>
                                    </select>
                                </div>
                                
                                <div class="col-md-4">
                                    <label for="ParmanentState" class="form-label">Permanent State</label>
                                    <select name="ParmanentState" id="stateDropdown" class="form-control" required>
                                        <option value="" disabled selected>Select a state...</option>
                                    </select>
                                </div>
                                
                               

                            </div>
                            <div class="row mb-5">
                                <div class="col-md-4">
                                    <label for="ParmanentCity" class="form-label">Permanent City</label>
                                    <select name="ParmanentCity" id="cityDropdown" class="form-control" required>
                                        <option value="" disabled selected>Select a city...</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label for="ParmanentPincode" class="form-label">Permanent Pincode</label>
                                    <input type="number" name="ParmanentPincode" id="ParmanentPincode"
                                        class="form-control" placeholder="Permanent Pincode" required>
                                </div>
                            </div>
                        </div>
                        <hr class="hr" style="color:rgb(40, 147, 159); block-size: 2px;">
                        <div class="row">
                            <div class="row mt-5">
                                <h1 class="mb-3 h3">Present Address</h1>

                                <div class="col-md-4">
                                    <label for="PresentAddress" class="form-label">Present Address</label>
                                    <textarea class="form-control" rows="2" name="PresentAddress" id="PresentAddress"
                                        class="form-control" placeholder="Present Address"></textarea>
                                </div>
                                <div class="col-md-4">
                                    <label for="PresentCountry" class="form-label">Present Country</label>
                                    <select name="PresentCountry" id="countryDropdown1" class="form-control" required>
                                        <option value="" disabled selected>Select a country...</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label for="PresentState" class="form-label">Present State</label>
                                    <select name="PresentState" id="stateDropdown1" class="form-control" required>
                                        <option value="" disabled selected>Select a state...</option>
                                    </select>
                                </div>

                            </div>
                            <div class="row mb-5">
                                <div class="col-md-4">
                                    <label for="PresentCity" class="form-label">Present City</label>
                                    <select name="PresentCity" id="cityDropdown1" class="form-control" required>
                                        <option value="" disabled selected>Select a city...</option>
                                    </select>
                                </div>
                                
                                <div class="col-md-4">
                                    <label for="PresentPincode" class="form-label">Present Pincode</label>
                                    <input type="number" name="PresentPincode" id="PresentPincode" class="form-control"
                                        placeholder="Present Pincode">
                                </div>
                            </div>
                        </div>
                        <hr class="hr" style="color: rgb(48, 138, 146); block-size: 2px;">
                        <div class="row">

                            <div class="row   mt-5">
                                <h1 class="mb-3 h3">Services</h1>
                                <% if (services.RechargeServicesLink === 'active' || user.role === 'admin') { %>
                                <div class="col-md-6">
                                    <label for="RechargeServices" class="form-label">Recharge Services</label>
                                    <select class="form-select" name="RechargeServices" id="RechargeServices">
                                        <option value="active">Active</option>
                                        <option value="inactive">Inactive</option>
                                    </select>
                                </div>
                                <% } %>
                                <% if (services.MoneyServicesLink === 'active' || user.role === 'admin') { %>
                                <div class="col-md-6">
                                    <label for="MoneyServices" class="form-label">Money Services</label>
                                    <select class="form-select" name="MoneyServices" id="MoneyServices">
                                        <option value="active">Active</option>
                                        <option value="inactive">Inactive</option>
                                    </select>
                                </div>
                                <% } %>
                            </div>

                            <div class="row   mb-5">
                                <% if (services.AepsServicesLink === 'active' || user.role === 'admin') { %>
                                <div class="col-md-6">
                                    <label for="AepsServices" class="form-label">AEPS Services</label>
                                    <select class="form-select" name="AepsServices" id="AepsServices">
                                        <option value="active">Active</option>
                                        <option value="inactive">Inactive</option>
                                    </select>
                                </div>
                                <% } %>
                                <% if (services.PayoutServicesLink === 'active' || user.role === 'admin') { %>
                                <div class="col-md-6">
                                    <label for="PayoutServices" class="form-label">Payout Services</label>
                                    <select class="form-select" name="PayoutServices" id="PayoutServices">
                                        <option value="active">Active</option>
                                        <option value="inactive">Inactive</option>
                                    </select>
                                </div>
                                <% } %>
                            </div>
      
                            <div class="text-center">
                                <button type="submit" class="btn btn-primary sendEmail()">Add User</button>
                                
                            </div>
                        </div>

            </form>
        </div>
    </div>

    </div>

    <!-- Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
        crossorigin="anonymous"></script>
        <!--  this is validation of number only 10 digit. -->
        <script>
            const mobileNoInput = document.getElementById('mobileNo');
            const mobileNoError = document.getElementById('mobileNoError');
        
            function validateMobileNumber() {
                const mobileNo = mobileNoInput.value.replace(/\D/g, ''); // Remove non-digit characters
        
                if (mobileNo.length === 10) {
                    mobileNoError.classList.add('d-none'); // Hide the error message
                } else {
                    mobileNoError.classList.remove('d-none'); // Show the error message
                }
            }
        
            mobileNoInput.addEventListener('input', validateMobileNumber);
        </script>





<!-- newuser.ejs -->

<!-- ... (existing code) -->
<!-- Add the following script before the closing </body> tag in your HTML file -->
<script>
    const countryDropdown = document.getElementById('countryDropdown');
    const stateDropdown = document.getElementById('stateDropdown');
    const cityDropdown = document.getElementById('cityDropdown');

  
  
    // Function to fetch countries and populate the country dropdown
    async function fetchCountries() {
      try {
        const response = await fetch('/api/countries');
        const countries = await response.json();
  
        countries.forEach(country => {
          const option = document.createElement('option');
          option.value = country.isoCode;
          option.textContent = country.name;
          countryDropdown.appendChild(option);
          
        
        });
      } catch (error) {
        console.error('Error fetching countries:', error);
      }
    }
  
    // Function to fetch states and populate the state dropdown
    async function fetchStates() {
      const countryCode = (countryDropdown.value);
      
  
      try {
        const response = await fetch(`/states/${countryCode}`);
        const states = await response.json();
  
        stateDropdown.innerHTML = '<option value="" disabled selected>Select State</option>'; // Clear existing options
  
        states.forEach(state => {
          const option = document.createElement('option');
          option.value = state.isoCode;
          option.textContent = state.name;
          stateDropdown.appendChild(option);
        });
      } catch (error) {
        console.error('Error fetching states:', error);
      }
    }
  
    // Function to fetch cities and populate the city dropdown
    // Function to fetch cities and populate the city dropdown
async function fetchCities() {
  const countryCode = countryDropdown.value;
  const stateCode = stateDropdown.value;

  try {
    const response = await fetch(`/cities/${countryCode}/${stateCode}`);
    
    const cities = await response.json();

    cityDropdown.innerHTML = '<option value="" disabled selected>Select City</option>'; // Clear existing options
    
    cities.forEach(city => {
      const option = document.createElement('option');
      option.value = city.name;
      option.textContent = city.name;
      cityDropdown.appendChild(option);
    });
  } catch (error) {
    console.error('Error fetching cities:', error);
  }
}

  
    // Fetch countries on page load
    fetchCountries();
  
    // Add event listeners to the country and state dropdowns
    countryDropdown.addEventListener('change', fetchStates);
    stateDropdown.addEventListener('change', fetchCities);
   
  </script>
  <!-- -------------------present countrystate city--------- -->

  <script>
    
    const countryDropdown1 = document.getElementById('countryDropdown1');
    const stateDropdown1 = document.getElementById('stateDropdown1');
    const cityDropdown1 = document.getElementById('cityDropdown1');
  
    // Function to fetch countries and populate the country dropdown
    async function fetchCountries() {
      try {
        const response = await fetch('/api/countries');
        const countries = await response.json();
  
        countries.forEach(country => {
          const option = document.createElement('option');
          option.value = country.isoCode;
          option.textContent = country.name;
          countryDropdown1.appendChild(option);
          
        
        });
      } catch (error) {
        console.error('Error fetching countries:', error);
      }
    }
  
    // Function to fetch states and populate the state dropdown
    async function fetchStates() {
      const countryCode = (countryDropdown1.value);
      
  
      try {
        const response = await fetch(`/states/${countryCode}`);
        const states = await response.json();
  
        stateDropdown1.innerHTML = '<option value="" disabled selected>Select State</option>'; // Clear existing options
  
        states.forEach(state => {
          const option = document.createElement('option');
          option.value = state.isoCode;
          option.textContent = state.name;
          stateDropdown1.appendChild(option);
        });
      } catch (error) {
        console.error('Error fetching states:', error);
      }
    }
  
    // Function to fetch cities and populate the city dropdown
    // Function to fetch cities and populate the city dropdown
async function fetchCities() {
  const countryCode = countryDropdown1.value;
  const stateCode = stateDropdown1.value;

  try {
    const response = await fetch(`/cities/${countryCode}/${stateCode}`);
    
    const cities = await response.json();

    cityDropdown1.innerHTML = '<option value="" disabled selected>Select City</option>'; // Clear existing options
    
    cities.forEach(city => {
      const option = document.createElement('option');
      option.value = city.name;
      option.textContent = city.name;
      cityDropdown1.appendChild(option);
    });
  } catch (error) {
    console.error('Error fetching cities:', error);
  }
}

  
    // Fetch countries on page load
    fetchCountries();
  
    // Add event listeners to the country and state dropdowns
    countryDropdown1.addEventListener('change', fetchStates);
    stateDropdown1.addEventListener('change', fetchCities);
   
  </script>
  


  
  
  
</body>
<%- include('footer.ejs') %>

</html>